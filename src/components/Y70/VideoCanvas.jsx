/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 VideoCanvas.glb --keepmaterials 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Html } from '@react-three/drei'
export function VideoCanvas(props) {
  const { nodes, materials } = useGLTF('/VideoCanvas.glb')
  const videoRef = useRef(null)
  useEffect(()=>{
    videoRef.current.play();
    // console.log("!!!")
  }, [])
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Cube.geometry} material={nodes.Cube.material} position={[-0.116, 0.253, 0.193]} rotation={[0, Math.PI / 4, 0]} scale={[0.001, 0.175, 0.054]} >
      <Html className="content" rotation-y={-Math.PI / 2} scale={[175/54, 1, 1]} position={[0, -0.05, 0]} transform occlude>
        <video style={{top:0 ,height:"80px"}} src='/bunny.mp4' ref={videoRef} muted autoPlay loop/>
      </Html>
      </mesh>
    </group>
  )
}

useGLTF.preload('/VideoCanvas.glb')
